[4] A classmate was discussing 3000pc-rendezvous.c and said "I don't understand why that rendezvous program has to be so complicated, it should just use regular ints rather than those weird semaphores." To try and answer your classmate's question, do the following to create and analyze 3000pc-rendezvous-simple.c on a VM with at least two cores (check /proc/cpuinfo):
	[1] Remove all the pthread_ and sem_ declarations and replace them with standard C types (or structs of standard C types). (If you remove the includes for semaphore.h and pthread.h, these will become compilation errors that you can then fix.) Hint: you don't need anything fancy:
		convert entry, cond_mutex, queue_nonempty, and queue_nonfull to be ints. 
	[1] Remove all pthread_ function calls, replace with functions of your own design. For semaphores, when sleeping just busy wait (loop forever until the condition is met). For condition variables, do short sleeps in between checking the condition, e.g., usleep(1000):
		Add four functions to replace the old ones:
			void waitSem(int * sem) {
				while (*sem == 0) {
				}
				*sem = 0;
			}

			void postSem(int * sem) {
				*sem = 1;
			}

			void signalCon(int * cond) {
				*cond = 0;
			}

			void waitCon(int * cond, int * sem) {
				while (*cond) {
					postSem(sem);
					usleep(1000);
					waitSem(sem);
				}

				*cond = 1;
			}
	[1] Run multiple tests. Does your modified program run correctly? Be sure to test with no pauses and lots of events (at least 10,000, preferably many more). How did your modified program behave compared to the original:
		./3000pc-rendezvous 10000 100 20
			Result:
				Producer sleeping for 1 second...
				Word 1: X-ray
				Consumer sleeping for 1 second...
				ERROR: No room for producer after waiting!
				Word 2: Oscar
				Word 3: India
				Word 4: Whiskey
				Word 5: Lima
				Word 6: Foxtrot
				Word 7: Kilo
				Word 8: Kilo
				Word 9: Alpha
				Word 10: Tango
				Word 11: Mike
				Word 12: Delta
				Word 13: India
				Word 14: Whiskey
				Word 15: Kilo
				Word 16: Mike
				Word 17: Oscar
				Word 18: Dash
				Word 19: Kilo
				Word 20: Echo
				Word 21: X-ray
				Consumer sleeping for 1 second...
				Word 22: Alpha
				Word 23: Zulu
				Word 24: Charlie
				Word 25: Papa
				Word 26: Papa
				Word 27: Tango
				Word 28: Bravo
				Word 29: Papa
				Word 30: Uniform
				Word 31: Delta
				Word 32: Quebec
				Word 33: Foxtrot
				Word 34: Golf
				Word 35: Yankee
				Word 36: Charlie
				Word 37: Juliet
				Word 38: Zulu
				Word 39: Tango
				Word 40: Sierra
				Word 41: Whiskey
				Consumer sleeping for 1 second...
				Word 42: Dash
				Word 43: India
				Word 44: Lima
				Word 45: Kilo
				Word 46: Kilo
				Word 47: Uniform
				Word 48: Delta
				Word 49: Whiskey
				Word 50: November
				Word 51: Kilo
				Word 52: Victor
				Word 53: Lima
				Word 54: Whiskey
				Word 55: Bravo
				Word 56: Charlie
				Word 57: November
				Word 58: X-ray
				Word 59: India
				Word 60: Golf
				Word 61: Mike
				Consumer sleeping for 1 second...
				Word 62: Uniform
				Word 63: Charlie
				Word 64: Zulu
				Word 65: Quebec
				Word 66: Foxtrot
				Word 67: Papa
				Word 68: Dash
				Word 69: Yankee
				Word 70: Sierra
				Word 71: Uniform
				Word 72: Papa
				Word 73: Tango
				Word 74: Papa
				Word 75: November
				Word 76: Alpha
				Word 77: Alpha
				Word 78: Papa
				Word 79: Papa
				Word 80: Hotel
				Word 81: Tango
				Consumer sleeping for 1 second...
				Producer sleeping for 1 second...
				Word 82: Yankee
				ERROR: No room for producer after waiting!
			Original:
				Runs correctly without any error messages
		./3000pc-rendezvous 100000 1000 2000
			Result:
				Producer sleeping for 1 second...
				Word 1: Zulu
				Consumer sleeping for 1 second...
				ERROR: No room for producer after waiting!
				Word 2: India
				Word 3: Uniform
				Word 4: Mike
				Word 5: Oscar
				Word 6: Delta
				Word 7: Mike
				Word 8: Dash
				Word 9: Hotel
				Word 10: Tango
				Word 11: Quebec
				Word 12: Echo
				Word 13: X-ray
				Word 14: Whiskey
				Word 15: Mike
				Word 16: Hotel
				Word 17: India
				Word 18: Romeo
				Word 19: Uniform
				Word 20: Hotel
				Word 21: Bravo
				Word 22: November
				Word 23: Delta
				Word 24: Yankee
				Word 25: Whiskey
				Word 26: November
				Word 27: Sierra
				Word 28: November
				Word 29: Charlie
				Word 30: Quebec
				Word 31: Romeo
				Word 32: November
				Word 33: X-ray
				ERROR: Nothing for consumer after waiting!
				Word 33: X-ray
				Word 34: Dash
				Word 35: November
				Word 36: Kilo
				Word 37: Lima
				Word 38: Oscar
				Word 39: Golf
				Word 40: Zulu
				Word 41: Victor
				Word 42: Romeo
				Word 43: Oscar
				Word 44: Golf
				Word 45: Lima
				Word 46: Foxtrot
				Word 47: X-ray
				Word 48: Yankee
				Word 49: Uniform
				Word 50: Charlie
				Word 51: Quebec
				Word 52: Zulu
				Word 53: Uniform
				Word 54: Romeo
				Word 55: Papa
				Word 56: Yankee
				Word 57: Zulu
				Word 58: Papa
				Word 59: Uniform
				Word 60: Delta
				Word 61: Romeo
				Word 62: Sierra
				Word 63: Alpha
				Word 64: Juliet
				Word 65: Whiskey
			Original:
				Runs correctly without any error messages
		./3000pc-rendezvous 100000 200 30
			Result:
				Producer sleeping for 1 second...
				Word 1: Hotel
				Consumer sleeping for 1 second...
				ERROR: No room for producer after waiting!
				Word 2: November
				Word 3: Mike
				Word 4: Victor
				Word 5: Papa
				Word 6: Echo
				Word 7: Echo
				Word 8: Lima
				Word 9: Tango
				Word 10: Lima
				Word 11: X-ray
				Word 12: November
				Word 13: Tango
				Word 14: Zulu
				Word 15: India
				Word 16: Tango
				Word 17: Foxtrot
				Word 18: Sierra
				Word 19: Bravo
				Word 20: Foxtrot
				Word 21: Alpha
				Word 22: Hotel
				Word 23: Delta
				Word 24: Tango
				Word 25: Uniform
				Word 26: India
				Word 27: Tango
				Word 28: Golf
				Word 29: X-ray
				ERROR: No room for producer after waiting!
			Original:
				Runs correctly without any error messages
	[1] Is your modified program handling concurrency properly? Specifically, is your replacement code good enough to replace the pthead_ routines? Discuss in light of your results and what we have discussed regarding concurrency:
		My program is not handling concurrency properly, and my replacement code is not good enough to replace the pthead_routines.
		The code I am using is not able to synchronize perfectly without semaphores and mutexes, causing deadlocks and timing errors to occur
		With very large runs, these errors can quickly accumulate, causing the program to freeze